시간복잡도는 데이터의 크기와 밀접한 관련이 있다.
시간복잡도는 최악의 케이스로 따진다
코딩테스트 알고리즘마다 시간복잡도로 표기를 해주긴한다. 처음엔 외워라

버블정렬 n제곱 
병합정렬 nlogn
sort nlogn
바이너리 서치 logn

n제곱과 nlogn 시간복잡도는 하늘과 땅 차이다 이거야

항상 데이터의 크기를 확인해야 한다
N개 (1<=N<=1,000,000)있을때 가장 큰 수(1,000,000)를 기준으로 해결

ex) 제한시간 2초
    1초에 2천만번이면 2초면 4천만번이하의 연산횟수로 문제를 해결해야한다

각 알고리즘이 문제풀이에 적합한지 시간복잡도를 통해 판단
버블정렬 : (1,000,000)^2 = 1,000,000,000,000 > 40,000,000 == 부적합
병합정렬 : 1,000,000log(1,000,000) = 약 20,000,000 < 40,000,000 == 적합

------------------------------------------------------------
* 시간복잡도를 바탕으로 코드 로직을 개선할 수 있다

- 우선 시간복잡도를 도출할 수 있어야 한다.
    1. 상수는 시간 복잡도 계산에서 제외
    2. 가장 많이 중첩된 반복문의 수행횟수가 시간복잡도의 기준

N=100000일때 N=3N 같은 시간복잡도 ... 상수는 제외

2중 for문 N^2 상당히 커진다
중첩부분을 어떻게 개선할 수 있을까? - 코드로직이 개선된다
-------------------------------------------------------------
